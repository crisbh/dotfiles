#!/bin/bash

# NAME
#       todofilter - This script collects TODO items from diary notes and
#       compiles them into to a TODO list.
#       Tasks marked as done are also marked as DONE back in the diary notes.
#       It also sorts tasks based on priority ([!]).
# 
# SYNOPSIS
#       todofilter usage
#       Set the relevant paths and run the script.

# Set paths
NOTES_DIR="$VAULT/notes/diary"
TODO_FILE="$VAULT/0-inbox/todo.md"
DONE_FILE="$VAULT/0-inbox/done.md"
TEMP_FILE=$(mktemp)

# Ensure necessary files exist
touch "$TODO_FILE" "$DONE_FILE"
chmod +w "$TODO_FILE" "$DONE_FILE"

echo "====================="
echo "STARTING TODO SCRIPT"
echo "====================="
echo

TODAY=$(date +"%Y-%m-%d")
YESTERDAY=$(date -v-1d +"%Y-%m-%d")

for file in "$NOTES_DIR/$TODAY.md" "$NOTES_DIR/$YESTERDAY.md"; do
    [ -f "$file" ] || continue  # Skip if file doesn't exist

    ### Collect unchecked TODOs (skip already processed)
    grep -h '^- \[ \]' "$file" | grep -v '^- \[>\]' > "$TEMP_FILE"

    echo "Collected TODOs:"
    cat "$TEMP_FILE"

    # Extract inline 'TODO:' items and convert them to standard [ ] format
    # Ignore those marked as DONE or COLLECTED
    grep -h -o 'TODO: .*' "$file" | grep -vE 'TODO: .*DONE$|TODO: \(COLLECTED\)' | sed 's/TODO: /- [ ] /' >> "$TEMP_FILE"

    ### Preserve existing tasks while appending new ones
    if [ -s "$TEMP_FILE" ]; then
        # Extract everything above "# TODO list" (header & YAML)
        awk '/^# TODO list/ {print; exit} {print}' "$TODO_FILE" > "$TEMP_FILE.new"

        # Extract tasks from TODO.md (below "# TODO list")
        awk 'f;/^# TODO list/{f=1}' "$TODO_FILE" > "$TEMP_FILE.old"

        # Append new tasks and preserve unique ones
        cat "$TEMP_FILE" "$TEMP_FILE.old" | awk '!seen[$0]++' >> "$TEMP_FILE.new"

        # Move everything back into TODO.md
        mv "$TEMP_FILE.new" "$TODO_FILE"
    fi

    ### Mark collected tasks as processed in daily notes
    sed -i '' 's/^- \[ \] \(.*\)$/- [>] \1/g' "$file"
    sed -i '' '/TODO: (COLLECTED)/!s/TODO: /TODO: (COLLECTED) /' "$file"

    ### Sync completed tasks from TODO.md → daily notes
    grep '^- \[x\]' "$TODO_FILE" | while read -r task; do
        task_text=$(echo "$task" | cut -c6- | sed 's/^ *//;s/ *$//')
        escaped_task=$(printf '%s\n' "$task_text" | sed -e 's/[\/&]/\\&/g')
        sed -i '' "s|^- \[>\] \(.*$escaped_task.*\)$|- [x] \1 ✅ DONE|g" "$file"
    done

    ### Sync completed tasks from daily notes → TODO.md
    grep -h '^- \[x\]' "$file" | while read -r task; do
        sed -i '' "s|^- \[ \]$(echo "$task" | cut -c6-)|- [x]$(echo "$task" | cut -c6-)|" "$TODO_FILE"
    done

    ### Auto-archive completed tasks (move to DONE.md)
    grep '^- \[x\]' "$TODO_FILE" >> "$DONE_FILE"
    sed -i '' '/^- \[x\]/d' "$TODO_FILE"

    ### Prioritize `[!]` tasks in TODO.md
    if grep -q '^- \[!\]' "$TODO_FILE" || grep -q '^- \[ \]' "$TODO_FILE"; then
        # Extract header and tasks separately
        awk '/^# TODO list/ {print; exit} {print}' "$TODO_FILE" > "$TEMP_FILE.new"
        awk 'f;/^# TODO list/{f=1}' "$TODO_FILE" > "$TEMP_FILE.old"

        (grep '^- \[!\]' "$TEMP_FILE.old"; grep -v '^- \[!\]' "$TEMP_FILE.old") >> "$TEMP_FILE.new"
        mv "$TEMP_FILE.new" "$TODO_FILE"
    fi
done

# Cleanup
rm -f "$TEMP_FILE"

echo
echo "====================="
echo "SCRIPT COMPLETE!"
echo "====================="

