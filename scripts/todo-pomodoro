#!/bin/bash

VAULT="/Users/cristian/Library/Mobile Documents/iCloud~md~obsidian/Documents/kosmos"
TODO_FILE=$VAULT/0-inbox/todo.md
TEMP_TASKS=/tmp/tasks.txt

# Extract tasks into a selection list
grep '^- \[!\]' "$TODO_FILE" | sed 's/- \[!\] /üî• /' > "$TEMP_TASKS"
grep '^- \[ \]' "$TODO_FILE" | sed 's/- \[ \] /üìÑ /' >> "$TEMP_TASKS"

# Add colors for tags using ANSI escape codes
cat "$TEMP_TASKS" | sed -E \
    -e 's/@coding/'"$(printf '\033[1;34m')@coding$(printf '\033[0m')/g" \
    -e 's/@research/'"$(printf '\033[1;32m')@research$(printf '\033[0m')/g" \
    -e 's/@teaching/'"$(printf '\033[1;33m')@teaching$(printf '\033[0m')/g" \
    -e 's/@tracking/'"$(printf '\033[1;31m')@tracking$(printf '\033[0m')/g" \
    -e 's/@admin/'"$(printf '\033[1;35m')@admin$(printf '\033[0m')/g" \
    > "$TEMP_TASKS.colored"

# If no tasks exist, exit
if [ ! -s "$TEMP_TASKS" ]; then
    echo "‚ùå No tasks found in TODO.md!"
    exit 1
fi

# Let the user pick a task using fzf
SELECTED_TASK=$(cat "$TEMP_TASKS.colored" | fzf --ansi --prompt="Pick a task: ")

if [ -z "$SELECTED_TASK" ]; then
    echo "‚ùå No task selected!"
    exit 1
fi

# Remove symbols from the selected task
CLEAN_TASK=$(echo "$SELECTED_TASK" | sed 's/^üî• //' | sed 's/^üìÑ //')

# Extract tags directly from the task
TAGS=$(echo "$CLEAN_TASK" | grep -o '@[a-zA-Z0-9_]\+' | tr -d '@' | tr '\n' ',')

# If no tags are found, set a default tag
if [[ -z "$TAGS" ]]; then
    echo "‚ùå No tags found for this task!"
    echo "Please give it a tag to enable time tracking."
    exit 1
fi

# Remove tags from the task text for display
CLEAN_TASK=$(echo "$CLEAN_TASK" | sed 's/@[a-zA-Z0-9_]\+//g' | xargs)

# Set the duration for the pomodoro. Default is 25 mins
DURATION=1500
# If argument 2 is given, run double pomodoro (50 mins).
if [[ $1 == "2" ]]; then
    echo $1
    DURATION=3000
    POMO_TYPE="double "
    echo $DURATION
fi

# Start tracking with Timewarrior
echo "‚è≥ Starting ${POMO_TYPE}Pomodoro for: \"$CLEAN_TASK\""
echo "üìù Timewarrior tags: $TAGS"
timew start "$TAGS"

# Run in the background and send notification when finished
(sleep "$DURATION" && timew stop && osascript -e "display notification \"Pomodoro Finished!\" with title \"Focus Session\"") &

echo "‚úÖ ${POMO_TYPE}Pomodoro started!"
